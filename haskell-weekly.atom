<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://haskellweekly.news/haskell-weekly.atom</id>
  <link rel="self" href="https://haskellweekly.news/haskell-weekly.atom" />
  <title>Haskell Weekly</title>
  <updated>2018-04-05T00:00:00Z</updated>
  <author>
    <name>Haskell Weekly</name>
    <email>info@haskellweekly.news</email>
  </author>

  <entry>
  <id>https://haskellweekly.news/issues/101.html</id>
  <title>Issue 101</title>
  <updated>2018-04-05T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/101.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://robots.thoughtbot.com/gamedev-with-elm-types">Gamedev with Elm types&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>February’s game jam set a theme of safety. Leveraging Elm’s type system helped make the experience of building a game much nicer.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://typeclasses.com/news/2018-03-typeclasses-born">Welcome to Type Classes!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This site will give a home to all the things we wanted to do but couldn’t fit into &lt;em>Joy&lt;/em>. The core of the site will be video courses on Haskell, Nix, and related subjects.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/88wcxv/ann_rowdy_the_web_routing_dsl/">Announcing &lt;code>rowdy&lt;/code>, the web routing DSL&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>rowdy&lt;/code> has the best of both worlds: you get compile-time guarantee by interpreting the DSL in a Template Haskell splice, so you can generate datatypes and functions.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://reasonablypolymorphic.com/blog/hkd-not-terrible">HKD: Less terrible than you might expect&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I thought I’d take some time to respond to some of the concerns raised about my recent higher-kinded data and free lenses for higher-kinded data posts.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mmhaskell.com/blog/2018/4/2/connecting-to-mailchimpfrom-scratch">Connecting to MailChimp … from scratch!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>There are a couple different Haskell libraries out there for MailChimp. But we’re not going to use them! Instead, we’ll learn how we can use Servant to connect directly to the API.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://vaibhavsagar.com/blog/2018/03/31/ihaskell-mybinder/">IHaskell on mybinder.org&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’m pretty excited about what this means for the Jupyter ecosystem and IHaskell in particular, and I’m looking forward to seeing what other people do with this!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.andrevdm.com/posts/2018-04-02-haskell-rogue-like.html">Haskell roguelike&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this series of posts I’m going to discuss some of the major design decisions that you will need to consider when making a Haskell roguelike game.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://leonmergen.com/on-anonymous-networking-in-haskell-announcing-tor-and-i2p-for-haskell-f1e30f52294f">On anonymous networking in Haskell: Announcing Tor and I2P for Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I have developed a Haskell API for both projects. In this post I will outline the differences between these projects and illustrate how to use them within Haskell.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://colourcoding.net/2018/03/29/marvellous-moeb/">Marvellous moeb&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Haskell can process flat files as though they were hierarchal with the help of lazy evaluation and one ridiculously clever one-line function.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/gonimo/gonimo/blob/3ba98fe57325073c64d43ec7945d32f0933d7a54/front/doc/Gonimo-Architecture.md">The Gonimo architecture, Part 1: The component&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The most important part is probably that we split up a component’s input into a model (its dependencies on other components) and a &lt;code>Config&lt;/code> which is introduced by the component itself.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://boards.greenhouse.io/github/jobs/1106071">Senior Engineering Leader at GitHub in San Francisco&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Semantic Code leader must have or quickly develop high level domain expertise within the fields of program analysis, programming language theory (PLT), parsing and computational semantics.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.betterpath.com/jobs">Senior Engineer at Betterpath in Brooklyn&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are looking for a senior engineer who will work on building health and financial products to help patients.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/kuribas/aeson-diff-generic/tree/d9ba6a3848c73d8dcb35776fd4881359b5b447cf">&lt;code>aeson-diff-generic&lt;/code>: Apply a JSON patch to Haskell datatypes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://purelyfunctional.org/posts/2018-04-02-llvm-hs-jit-external-function.html">Calling external functions from JIT-compiled LLVM modules using &lt;code>llvm-hs&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://jeremymikkola.com/posts/2018_04_02_cheatsheet_state_and_error.html">Cheatsheet: Stacking the &lt;code>State&lt;/code> and &lt;code>Either&lt;/code> monads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hkgumbs/codec-beam/tree/fc17e13a2bd9aa17b4a418c191fcc5d8d0c95d92">&lt;code>codec-beam&lt;/code>: Generate Erlang VM byte code from Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mail.haskell.org/pipermail/ghc-devs/2018-April/015564.html">GHC 8.4.2-rc1 now available&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/takenobu-hs/haskell-ethereum-assembly/tree/14eeeb6aeefc70a2e4c265ce4ea0568afb9aeeb8">&lt;code>haskell-ethereum-assembly&lt;/code>: Ethereum virtual machine assembly on Haskell DSL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://whatthefunctional.wordpress.com/2018/03/29/making-l-systems-with-haskell-and-logo/">Making L-systems with Haskell and Logo&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.ploeh.dk/2018/04/03/maybe-monoids/">Maybe monoids&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://h2.jaguarpaw.co.uk/posts/mtl-style-for-free/">MTL style for free&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/saschagrunert/nn/tree/fe9688176c2e2d509b5b5901164ba2538dabf367">&lt;code>nn&lt;/code>: A tiny neural network&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://byorgey.wordpress.com/2018/03/30/parametricity-for-bifunctor/">Parametricity for &lt;code>Bifunctor&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fpcomplete.com/asynchronous-exception-handling-in-haskell">Webinar: Asynchronous exception handling in Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/tree-traversals-0.1.0.0">tree-traversals&lt;/a>,
a library providing in-order, pre-order, post-order, level-order, and reversed level-order traversals for tree-like types.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/purebred-mua/purebred-email/issues/13">purebred-email: Tab character in subject header shows as whitespace&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ndmitchell/shake/issues/577">shake: Error message could contain stdin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>April 5: &lt;a href="https://www.meetup.com/HASKELL-SG/events/248176854/">April Meetup&lt;/a> in Singapore&lt;/li>
&lt;li>April 6: &lt;a href="https://www.meetup.com/Coding-in-Education-Bay-Area/events/248717027/">Learn and Teach Coding for Mid / High school Aged Kids&lt;/a> in Fremont, California, United States&lt;/li>
&lt;li>April 7: &lt;a href="https://www.meetup.com/Weekly-Functional-Programming-Meetup/events/249373356/">First Official Weekly Functional Programming Meetup&lt;/a> in Cambridge, Massachusetts, United States&lt;/li>
&lt;li>April 9: &lt;a href="https://www.meetup.com/Scala-Berlin-Brandenburg/events/248699720/">Mini-meetup: Type Classes in Scala and Haskell&lt;/a> in Berlin, Germany&lt;/li>
&lt;li>April 10: &lt;a href="https://www.meetup.com/Haskell-Hangout/events/248547064/">Haskell Hangout: Getting Started with Yesod and Haskell Web Development&lt;/a> in San Diego, California, United States&lt;/li>
&lt;li>April 11: &lt;a href="https://www.meetup.com/Boulder-Haskell-Programmers/events/249090504/">Type Driven Development&lt;/a> in Boulder, Colorado, United States&lt;/li>
&lt;li>April 12: &lt;a href="https://www.meetup.com/Eastside-Fun-c-tional-Programming-Group/events/248722662/">Why do Functional Programmers always talk about Algebras?&lt;/a> in Bellevue, Washington, United States&lt;/li>
&lt;li>April 18: &lt;a href="https://www.meetup.com/haskell-dublin-meetup/events/249428074/">Self-paced Haskell Study Group&lt;/a> in Dublin, Ireland&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/100.html</id>
  <title>Issue 100</title>
  <updated>2018-03-29T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/100.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://icidasset.com/writings/building-blocks/">Building blocks&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>You may be wondering why am I using the phrase “building blocks”, it’s because, to me, this really feels like putting blocks together and sometimes dismantling them.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.parsonsmatt.org/2018/03/22/three_layer_haskell_cake.html">Three layer Haskell cake&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The question of “How do I design my application in Haskell?” comes up a lot. There’s a bunch of perspectives and choices, so it makes sense that it’s difficult to choose just one.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://jxv.io/blog/2018-03-23-Generate-Typesafe-APIs-with-Fluid-Pt1.html">Generate type safe APIs with Fluid&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Fluid is a web API generator. It offers far more than type safety, and its goals aren’t limited to Haskell. First, let’s dive into a Hello World and see how it works.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blogs.ncl.ac.uk/andreymokhov/the-task-abstraction/">The &lt;code>Task&lt;/code> abstraction&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Neil Mitchell, Simon Peyton Jones and I have just finished a paper describing a systematic and executable framework for developing and comparing build systems. In this blog post I would like to share one interesting abstraction that we came up with to describe build tasks.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://johncarlosbaez.wordpress.com/2018/03/26/seven-sketches-in-compositionality/">Applied category theory: Online course&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>It just became a lot easier to learn about applied category theory, thanks to this free book. I think I’ll start a kind of informal online course or seminar based on this book on the Azimuth Forum.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.ploeh.dk/2018/03/26/the-maybe-functor/">The &lt;code>Maybe&lt;/code> functor&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>One of the simplest, and easiest to understand, functors is &lt;code>Maybe&lt;/code>. It’s also sometimes known as the &lt;code>Maybe&lt;/code> monad, but this is not a monad tutorial; it’s a functor tutorial. &lt;code>Maybe&lt;/code> is many things; one of them is a functor.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://namc.in/2018-03-26-lenses-part-1">Haskell lens: Part 1&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Lenses are one of the most popular, yet confusing aspect of Haskell. To be fair, I could never really understand how they work. This series of posts is going to be my attempt to understand lenses, the ideas and implementation details, and also the &lt;code>lens&lt;/code> package.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://whatthefunctional.wordpress.com/2018/03/27/everyday-haskell/">Everyday Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Up to this point, we’ve been covering a subset of the Haskell language which would look unusual to an experienced Haskell programmer. In our quest to make side-effects, we’ve skipped over a lot of useful functionality which makes programming in Haskell more pleasant.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.poisson.chat/posts/2018-03-28-generic-data.html">An old and a new library for generic deriving&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this post, I want to talk about how it takes advantage of existing infrastructure in the &lt;code>GHC.Generics&lt;/code> module to condense some of these generic implementations to one-liners.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.qfpl.io/posts/sv/status-roadmap/">&lt;code>sv&lt;/code>: Introduction, status, and road map&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>sv&lt;/code> is QFPL’s new CSV library for Haskell. The core data structure of &lt;code>sv&lt;/code> is a syntax tree for CSV that preserves white-space, quoting information, newline style, and other data that is usually thrown away.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://functionaljobs.com/jobs/9075-software-engineer-haskell-full-stack-singapore-on-site-at-capital-match">Software engineer at Capital Match in Singapore&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Our platform, built almost entirely from Haskell, is the largest marketplace invoice financing platform in South-East Asia, having processed more than US$50 million in funding over the past two years. We’re currently expanding into new markets and new territories, and we’re looking to expand our team!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.tweag.io/posts/2018-03-29-we-are-hiring-swe.html">Software engineer at Tweag I/O&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We have found functional programming in particular to be an enabling factor for us on some of the most ambitious projects we’ve faced for our clients: breaking through the exascale barrier in HPC, modeling a large variety of physiological processes in the human body, designing pipelines for storing and analyzing biophysical data, video search with natural language, building complex SaaS products with thousands of concurrent users and many others.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.well-typed.com/blog/2018/03/haskell-development-job-with-well-typed/">Haskell expert at Well-Typed&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are looking for a Haskell expert to join our team at Well-Typed. This is a great opportunity for someone who is passionate about Haskell and who is keen to improve and promote Haskell in a professional context.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/86cg1u/jobs_obsidian_systems_is_hiring/">Software developer at Obsidian Systems in New York City&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Obsidian Systems is looking for developers to work on full-stack Haskell web and mobile applications. We’re an 18-person team with a wide range of clients including seed-stage startups, multinational corporations, universities, and research groups. We provide innovative and robust technical solutions in support of our clients’ unique goals and challenges.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://oleg.fi/gists/posts/2018-03-28-achromatic-lens.html">Achromatic lens&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://neilmitchell.blogspot.com/2018/03/adding-package-lower-bounds.html">Adding package lower bounds&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.functionalgeekery.com/episode-121-claudia-doppioslash/">Functional Geekery episode 121: Claudia Doppioslash&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.snoyman.com/blog/2018/03/lambdaconf-haskell-hackathon-2018">LambdaConf Haskell Hackathon 2018&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jship.github.io/posts/2018-03-21-type-level-unit-testing-in-haskell.html">Type-level unit testing in Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://github.com/JackKiefer/herms/tree/5898e8cbd2e304223c2dadcfb5b154ab7b57b10a">Herm’s&lt;/a>,
a command-line manager for delicious kitchen recipes.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/haskell/haddock/issues/781">haddock: Quickjump menu should be reset/emptied upon close.&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dmjio/miso/issues/387">miso: Use jsverify on tests&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3940">stack: Warn when upgrading base&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>March 29: &lt;a href="https://www.meetup.com/HaskellerZ/events/248510184/">Interactive data exploration using Jupyter, Haskell and Nix&lt;/a> in Zürich, Switzerland&lt;/li>
&lt;li>April 2: &lt;a href="https://www.meetup.com/Portland-Functional-Programming-Study-Group/events/249170233/">Pearls of Functional Algorithm Design&lt;/a> in Portland, Oregon, United States&lt;/li>
&lt;li>April 3: &lt;a href="https://www.meetup.com/ATX-Haskell/events/248710128/">Haskell Beginner-Friendly Lab&lt;/a> in Austin, Texas, United States&lt;/li>
&lt;li>April 4: &lt;a href="https://www.meetup.com/SEAHUG/events/248518909/">Haskell Learners’ Group&lt;/a> in Seattle, Washington, United States&lt;/li>
&lt;li>April 5: &lt;a href="https://www.meetup.com/HASKELL-SG/events/248176854/">April Meetup&lt;/a> in Singapore&lt;/li>
&lt;li>April 10: &lt;a href="https://www.meetup.com/Haskell-Hangout/events/248547064/">Haskell Hangout: Getting Started with Yesod and Haskell Web Development&lt;/a> in San Diego, California, United States&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/99.html</id>
  <title>Issue 99</title>
  <updated>2018-03-22T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/99.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.hackage.haskell.org/posts/2018-03-20-deployment.html">Latest Hackage deployment&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>As many of you may have noticed, there was a change in Hackage’s appearance on Monday. This is a first result of the design work being done by Nuno Alexandre which is intended to give Haskell a consistent, friendly and welcoming look as he explains in his Redesigning Haskell docs blogpost.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.stackage.org/blog/2018/03/announce-ghc-8-4-on-nightlies">Announcing Stackage nightly snapshots with GHC 8.4.1&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I am pleased to announce that Stackage nightly snapshots now use GHC 8.4.1. Stack users can simply use &lt;code>resolver: nightly-2018-03-16&lt;/code> in a project’s &lt;code>stack.yaml&lt;/code> file in order to build and test with GHC 8.4.1.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.tweag.io/posts/2018-03-15-bazel-nix.html">Nix + Bazel = Fully reproducible, incremental builds&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We’ll argue that you want to use Nix to “build” your entire compiler toolchain and system libraries, but use Bazel to build your code base to achieve fast, correct and incremental rebuilds.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://osa1.net/posts/2018-03-16-gc-optimizations.html">Three runtime optimizations done by GHC’s GC&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>While working on GHC’s GC code I realized that it does some runtime optimizations. One of those I already knew from another language, but the other two were quite interesting to me because they’re related with laziness.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.shimweasel.com/programming/2018/03/18/notes-on-a-better-migration-system-for-persistent">Notes on a better migration system for Persistent&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The biggest problem I hit is with the migration system. It doesn’t allow you to consider two versions of the same database in one program, which makes using Haskell functions to populate new or changed fields &amp;amp; tables impossible.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mpickering.github.io/posts/2018-03-20-recordsvstypeclasses.html">Replacing type classes with records affects optimisation&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>It is somewhat common to suggest using records instead of type classes for particular domains for which type classes are not deemed idiomatic. However, this suggestion should be taken with caution as the change will have consequences on how your program is optimized.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-at-work.com/episodes/2018-03-18-testing-failure-with-either-instead-of-exception.html">Testing failure with &lt;code>Either&lt;/code> instead of &lt;code>Exception&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this episode we will introduce a function exposing the errors using the &lt;code>Either&lt;/code> type, and rewrite the test suite to match the new behavior.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.fpcomplete.com/blog/without-performance-tests-we-will-have-a-bad-time-forever">Without performance tests, we will have a bad time, forever&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Of course, being happy about the improvement and going on with my life would have been wrong, as random performance improvements almost always mean that something foul is at play.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://icfp18.sigplan.org/track/FHPC-2018-papers#FHPC-2018-Call-for-Papers">FHPC 2018 Call for Papers&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The 7th ACM SIGPLAN Workshop on Functional High-Performance Computing (FHPC’18) is being held as in previous years in conjunction with the International Conference on Functional Programming (ICFP’18) together with numerous other workshops/symposia, and as a first, colocated with Strange Loop, in St. Louis, MO, USA.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://taylor.fausak.me/2018/03/16/record-fields-break-smart-constructors/">Record fields break smart constructors&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Unfortunately the record field also allows us to do a record update, which can break the invariants imposed by our smart constructor.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/84r1dp/summer_2018_internship_opportunity_with_tesla_inc/">Summer intern at Tesla in Palo Alto&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Our team supports firmware and software development for Tesla products through custom tooling, process optimization, and data integration.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://myhaskelljournal.com/composing-multiple-functions-the-foldr-way/">Composing multiple functions: The &lt;code>foldr&lt;/code> way&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.schoolofhaskell.com/user/fumieval/drinkery-the-boozy-streaming-library">Drinkery the boozy streaming library&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://softwaresimply.blogspot.com/2018/03/fake-generating-realistic-test-data-in.html">Fake: Generating realistic test data in Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://vaibhavsagar.com/blog/2018/03/17/faking-non-nixos-stack/">Faking non-NixOS for Stack&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.ploeh.dk/2018/03/19/functors-applicatives-and-friends/">Functors, applicatives, and friends&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://whatthefunctional.wordpress.com/2018/03/18/lessons-learned/">Lessons learned&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/3/19/sending-texts-with-twilio-and-haskell">Sending texts with Twilio and Haskell!&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/composewell/streaming-benchmarks/tree/896cc9af477d83403377b8c10fbc4597235077d3">Streaming benchmarks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://github.com/mrkgnao/silica/tree/05f3a8276936371f7e6bba7cf12f32f6ee14847e">Silica&lt;/a>,
a library for optics with the most amazing type errors you’ve seen.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/purescript/purescript/issues/3281">purescript: KindsDoNotUnify error is vague&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3925">stack: Modify “recommended packages” output to include revision info&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>March 22: &lt;a href="https://www.meetup.com/Bay-Area-Haskell-Users-Group/events/248014098/">Haskell Talks and Hangout at Formation&lt;/a> in San Francisco, California, United States&lt;/li>
&lt;li>March 23: &lt;a href="https://www.meetup.com/Functional-Study-Group/events/248777457/">Functional Friday: Category Theory for Programmers&lt;/a> in Pleasanton, California, United States&lt;/li>
&lt;li>March 24: &lt;a href="https://www.meetup.com/codeselfstudy/events/248683126/">Open Programming Session&lt;/a> in Berkeley, California, United States&lt;/li>
&lt;li>March 26: &lt;a href="https://www.meetup.com/Vancouver-Functional-Programmers/events/248944739/">Haskell Peer Study Group&lt;/a> in Vancouver, British Columbia, Canada&lt;/li>
&lt;li>March 27: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/248322238/">Auckland FP Meetup: Learn FP Hands-on&lt;/a> in Auckland, New Zealand&lt;/li>
&lt;li>March 28: &lt;a href="https://www.meetup.com/haskell-dublin-meetup/events/248659838/">Haskell Study Group&lt;/a> in Dublin, Ireland&lt;/li>
&lt;li>March 29: &lt;a href="https://www.meetup.com/HaskellerZ/events/248510184/">Interactive data exploration using Jupyter, Haskell and Nix&lt;/a> in Zürich, Switzerland&lt;/li>
&lt;li>April 10: &lt;a href="https://www.meetup.com/Haskell-Hangout/events/248547064/">Haskell Hangout: Getting Started with Yesod and Haskell Web Development&lt;/a> in San Diego, California, United States&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/98.html</id>
  <title>Issue 98</title>
  <updated>2018-03-15T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/98.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ghc.haskell.org/trac/ghc/blog/ghc-8.4.1-released">GHC 8.4.1 released&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The GHC developers are very happy to announce the 8.4.1 release of Glasgow Haskell Compiler. This is the third major release in the GHC 8 series. As such, the focus of this release is performance, stability, and consolidation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jpittis.ca/posts/introducing-toxiproxy-haskell/">Introducing Toxiproxy Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>With the release of &lt;code>toxiproxy-haskell&lt;/code> on Hackage, I’d like to introduce the Haskell community to failure testing using Toxiproxy so that they can improve the resilience of their network connected applications.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-at-work.com/episodes/2018-03-08-refactoring-and-finding-the-right-data-structure.html">Refactoring and finding the right data structure&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The program allowed what should’ve been considered conflicting modes of operation. In this episode I’ll perform the same modification, to show you how the right data structure can guide and improve your implementation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://lettier.github.io/posts/2016-06-01-data-visualization-with-haskell-nyc-public-urination.html">Data visualization with Haskell: NYC public urination&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Using Haskell, we queried, processed, and visualized 2,678 3-1-1 Urinating in Public complaints recorded between 2010 and 2016. A definite cyclic pattern can be seen from year to year.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://neilmitchell.blogspot.com/2018/03/safe-library-with-better-stack-traces.html">Safe library with better stack traces&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>To get the stack traces just add &lt;code>Partial&lt;/code> to any function you believe to be partial — it’s easy. If you are happy to stick with GHC 8.0 and above you can use &lt;code>HasCallStack&lt;/code> from &lt;code>GHC.Stack&lt;/code> without depending on &lt;code>safe&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.kovach.me/posts/2018-03-07-generating-art.html">Generating artwork with Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve been creating generative art consistently for about six months now. People are starting to ask what my stack looks like, and until now I haven’t had anything to point at; I’d like to change that today!&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://jaspervdj.be/posts/2018-03-08-handle-pattern.html">Haskell design patterns: The handle pattern&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The handle pattern allows you write stateful applications that interact with external services in Haskell. It complements pure code well, and it is somewhat the result of iteratively applying the question: Can we make it simpler?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.parsonsmatt.org/2018/03/14/servant_route_smooshing.html">Servant route smooshing&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Because Haskell’s type system isn’t as pleasant as the value system, this can get gnarly. Servant has a very happy path — but that path is very narrow.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://whatthefunctional.wordpress.com/2018/03/13/text-reflow-in-haskell/">Text reflow in Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I noticed that when running on the Windows command line, the narrator would break words apart when it reached the 80 column mark. In order to make my text adventure screen-reader friendly I had to support an 80 character column limit.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://qfpl.io/posts/backpack-for-initial-and-final-encodings/">Backpack for initial and final encodings&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Backpack lets us decompose final encodings a little more than we can with the usual approach, although we are partly trading off newtype wrapping for sub-libraries. I still really like the usage of it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://wadler.blogspot.com/2018/03/iohk-is-hiring-six-plt-engineers.html">Programming language theory engineers at IOHK&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>IOHK is hiring six Programming Language Theory engineers, to design and implement the smart contract language Plutus and related domain specific languages.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/83649m/like_a_nonempty_subset_of_trains_haskell_tracsis/">Functional developers at Tracsis in Leeds&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are working on a green-field, high-availability, unrelentingly cloud-y web product for rail control and planning. Our stack is a high-availability, event-sourced Yesod backend running on AWS.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/83qcak/haskell_needs_better_libraries_a_proposal/">Haskell needs better libraries: A proposal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/3/12/more-series-whats-coming-up">More series + What’s coming up!&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.slipthrough.net/2018/03/13/thoughts-on-typeclass-codecs/">Some thoughts on typeclass-based codecs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.stackage.org/nightly-2018-03-13">Stackage Nightly 2018-03-13 with GHC 8.4.1&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.usrsb.in/symbolic-execution-intuition-and-implementation.html">Symbolic execution: Intuition and implementation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@zw3rk/talk-case-study-cross-compiling-dhall-json-4fa7e3c4c42a">Talk: Case study: Cross compiling &lt;code>dhall-json&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://oleg.fi/gists/posts/2018-03-08-typeclass-optics.html">Typeclass optics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://soupi.github.io/rfc/writing_simple_haskell/">Writing simple Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://www.stackage.org/lts-11.0/package/hedgehog-0.5.2">Hedgehog&lt;/a>,
a modern property-based testing system that will eat all your bugs.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cartazio/arithmoi/issues/95">arithmoi: Do not report -1 as a factor&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gelisam/hawk/issues/182">hawk: Configure Travis to run the stack and cabal builds in parallel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3904">stack: Possibility to specify a base path to unpack a package&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/composewell/streamly/issues/17">streamly: Add base/Control.Monad operations&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>March 15: &lt;a href="https://www.meetup.com/Chicago-Functional-Programming-Meetup/events/248023277/">Revisiting “Why FP Matters” by John Hughes&lt;/a> in Chicago, Illinois, United States&lt;/li>
&lt;li>March 16: &lt;a href="https://www.meetup.com/utah-elm/events/248674188/">Utah Elm lunch&lt;/a> in Lehi, Utah, United States&lt;/li>
&lt;li>March 17: &lt;a href="https://www.meetup.com/Haskell-MAD/events/248692920/">Aspectos técnicos de Bitcoin y blockchain&lt;/a> in Madrid, Spain&lt;/li>
&lt;li>March 19: &lt;a href="https://www.meetup.com/Karlsruhe-Haskell-Lerngruppe/events/248464998/">Coding Dojo: Containers&lt;/a> in Karlsruhe, Germany&lt;/li>
&lt;li>March 20: &lt;a href="https://www.meetup.com/Wellington-FP/events/248313990/">“A Brief History of Functional Programming” and “Maps in Elm”&lt;/a> in Lower Hutt, New Zealand&lt;/li>
&lt;li>March 21: &lt;a href="https://www.meetup.com/CanFPG/events/248019017/">CanFP Monthly meetup&lt;/a> in Canberra, Australia&lt;/li>
&lt;li>March 22: &lt;a href="https://www.meetup.com/Bay-Area-Haskell-Users-Group/events/248014098/">Haskell Talks and Hangout at Formation&lt;/a> in San Francisco, California, United States&lt;/li>
&lt;li>March 27: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/248322238/">Auckland FP Meetup: Learn FP Hands-on&lt;/a> in Auckland, New Zealand&lt;/li>
&lt;li>March 28: &lt;a href="https://www.meetup.com/haskell-dublin-meetup/events/248659838/">Haskell Study Group&lt;/a> in Dublin, Ireland&lt;/li>
&lt;li>April 10: &lt;a href="https://www.meetup.com/Haskell-Hangout/events/248547064/">Haskell Hangout: Getting Started with Yesod and Haskell Web Development&lt;/a> in San Diego, California, United States&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/97.html</id>
  <title>Issue 97</title>
  <updated>2018-03-08T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/97.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://eng.uber.com/queryparser/">Queryparser, an open source tool for parsing and analyzing SQL&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Queryparser was originally conceived by an Uber engineer who was a Haskell enthusiast, and it quickly gained traction with several other engineers. In fact, many of us learned Haskell specifically to develop in it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.tweag.io/posts/2018-03-08-linear-sort.html">Implementing a safer sort with linear types&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Just by changing the arrow types in our functions to linear arrows, we are able to get additional guarantees that are enough to prove that the returned result is a permutation of the input.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://tech.frontrowed.com/2018/03/06/compact-regions-success-failure-questions/">Compact regions: Success, failure, and questions&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>At Front Row, we’ve been following the development of compact regions with much anticipation. Our API servers contain a cache of static data that is a perfect use case for this GHC feature.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://whatthefunctional.wordpress.com/2018/03/07/making-a-text-adventure-in-haskell-part-1/">Making a text adventure in Haskell: Part 1&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I decided to make a text adventure from scratch for my second Haskell project. Text adventures, which are one kind of interactive fiction, are games which are played entirely on a command-line terminal and are require only standard I/O.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.fosskers.ca/blog/deploying-haskell-en.html">Deploying Haskell programs&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Heroku is the free and convenient solution for this. It is a hosting service that allows pushes to a Github master branch to trigger redeploys, and it also caches dependencies so that subsequent redeploys are fast.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.well-typed.com/blog/2018/03/oop-in-haskell/">Object oriented programming in Haskell&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>For some problem domains this way of modeling is extremely suitable, and so one may wonder if we can take a similar approach in a purely functional language like Haskell, without losing purity.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://purelyfunctional.org/posts/2018-03-04-monadfix-lazy-strict-state.html">&lt;code>MonadFix&lt;/code> and the lazy and strict &lt;code>State&lt;/code> monad&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>After investigating this problem, I figured out that replacing the strict state monad by the lazy state monad solved the problem and lead to the expected behavior instead of an infinite loop.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://fuuzetsu.co.uk/blog/posts/2018-03-02-GHC-can-output-profiles-in-JSON-format.html">GHC can output profiling information as JSON and you should use it&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>You should start using &lt;code>-pj&lt;/code> if you’re using GHC profiling. Better, you should (re)write tools to work with this format instead of the awful ad-hoc parsing that existing tools do.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ryanglscott.github.io/2018/03/04/how-quantifiedconstraints-can-let-us-put-join-back-in-monad/">How &lt;code>QuantifiedConstraints&lt;/code> can let us put &lt;code>join&lt;/code> back in &lt;code>Monad&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In order to better understand why adding &lt;code>join&lt;/code> to &lt;code>Monad&lt;/code> interacted so poorly with &lt;code>GeneralizedNewtypeDeriving&lt;/code>, we must first take a detour into roles, the mechanism which underlies GHC’s notion of type-safe coercions.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://jobs.csiro.au/job/Brisbane%2C-QLD-EOI-Functional-Programming-Software-Engineers/463348700/">Functional programmers at QFPL in Brisbane&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We are currently seeking functional programmers to fill five vacancies. These roles span early-career through to senior software engineer roles. In these roles, you will develop open-source software using functional programming with an emphasis on application to industry problems.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.azara.io/jobs/">Senior Software Engineer at Azara in Boulder&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Azara is Looking for full-time senior software engineer to join our quickly growing team in beautiful Boulder, Colorado. We value passion for software over all other traits, and want someone ready to jump into any part of our web or mobile app.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://urbint.workable.com/j/34A767A49F">Software Engineer at Urbint in New York&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Urbint engineering is building a cutting-edge data ingestion and machine learning pipeline for exposing the hidden intelligence within urban data. We are a team of close-knit, talented engineers who obsess over problem solving, code quality and workflow.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/82oia8/caseof_a_simple_way_to_query_constructors/">&lt;code>caseof&lt;/code>: A simple way to query constructors&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dirtcheaphaskell.io/#library">Dirt Cheap Haskell Q&amp;amp;A&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/81vrbk/ann_languagerust/">&lt;code>language-rust&lt;/code>: Parsing and pretty printing Rust&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://patrickdoc.github.io/criterion.html">Measuring functions in Criterion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/82lxn6/ann_sv_csv_library/">&lt;code>sv&lt;/code>: A library for comma separated values&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.calebh.io/Type-Inference-by-Solving-Constraints/">Type inference by solving constraints&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@zw3rk/what-is-new-in-cross-compiling-haskell-42ba93555c69">What is new in cross compiling Haskell&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/named-0.1.0.0">named&lt;/a>,
a lightweight library for named function parameters based on overloaded labels.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/typelead/eta/issues/688">eta: Upgrade to base-4.10&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/roman/Haskell-capataz/issues/17">Haskell-capataz: Allow Worker sub-routines to receive their WorkerId&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3873">stack: Allow GitHub shorthand for &lt;code>extra-deps&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/GetShopTV/swagger2/issues/139">swagger2: Provide a &lt;code>Options -&amp;gt; SchemaOptions&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>March 8: &lt;a href="https://www.meetup.com/HASKELL-SG/events/246341985/">Haskell.SG March Meetup&lt;/a> in Singapore&lt;/li>
&lt;li>March 9: &lt;a href="https://www.meetup.com/Reactive-Application-Programmers-in-Delhi-NCR/events/248292715/">Practical Steps To Perform Monads Transformation&lt;/a> in New Delhi, India&lt;/li>
&lt;li>March 10: &lt;a href="https://www.meetup.com/Atlanta-Functional-Programming-Meetup/events/248518116/">Norcross Haskathon&lt;/a> in Atlanta, Georgia, United States&lt;/li>
&lt;li>March 11: &lt;a href="https://www.meetup.com/Tokyo-Haskell-Meetup/events/247799091/">March Haskell Meetup&lt;/a> in Tokyo, Japan&lt;/li>
&lt;li>March 12: &lt;a href="https://www.meetup.com/lambda-luminaries/events/247865795/">Making a drum machine with Elm and the Web Audio API&lt;/a> in Johannesburg, South Africa&lt;/li>
&lt;li>March 13: &lt;a href="https://haskellmeetuplondonfunctionals.splashthat.com">London Functionals Haskell Meetup&lt;/a> in London, United Kingdom&lt;/li>
&lt;li>March 14: &lt;a href="https://www.meetup.com/FunctionalTO-meetup/events/247738875/">Hack Night + Haskell Presentation&lt;/a> in Toronto, Ontario, Canada&lt;/li>
&lt;li>March 15: &lt;a href="https://www.meetup.com/Chicago-Functional-Programming-Meetup/events/248023277/">Revisiting “Why FP Matters” by John Hughes&lt;/a> in Chicago, Illinois, United States&lt;/li>
&lt;li>March 27: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/248322238/">Auckland FP Meetup: Learn FP Hands-on&lt;/a> in Auckland, New Zealand&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/96.html</id>
  <title>Issue 96</title>
  <updated>2018-03-01T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/96.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.tweag.io/posts/2018-02-28-bazel-haskell.html">Build large polyglot projects with Bazel: Now with Haskell support&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We have rules for building Haskell libraries (packages), binaries, tests and Haddock documentation. Libraries or binaries can freely provide C/C++ or Java targets as dependencies, or use preprocessors such as &lt;code>hsc2hs&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://jxv.io/blog/2018-02-28-A-Game-in-Haskell.html">A game in Haskell: Dino Rush&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Writing a game in Haskell appears to be an elusive, white-whale task. And with an existing handful of small and citable games, I wish more existed with documentation to ease the barrier of entry.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://haskell-at-work.com/episodes/2018-02-26-validation-with-smart-constructors.html">Validation with smart constructors&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>There are multiple kinds of validation; checking that values have a certain structure, which is deterministic, and things like querying a database to see if a user name is already taken, which is effectful and indeterministic.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://chrispenner.ca/posts/asts-with-fix-and-free">ASTs with &lt;code>Fix&lt;/code> and &lt;code>Free&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve been working on a toy compiler lately so I’ve been thinking about ASTs! It’s a new thing for me and I’ve gotten a bit obsessed with the idea of simplifying both the representation of the tree itself as well as the code to interpret it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ixmatus.net/articles/docker-without-docker.html">Hocker: I can’t believe it’s not Docker!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We’ve pulled a Docker image from a registry without using the Docker client or going through the Docker daemon. We also fetched three other artifacts of the &lt;code>hello-world&lt;/code> Docker image that the stock Docker tooling elides from you.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.sylvain-henry.info/home/posts/2018-02-21-heterogeneous-collections.html">Heterogeneous collections&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In my opinion, using the data type I’ve called &lt;code>Variant&lt;/code> to handle heterogeneous collections is currently the best alternative. It is type-safe, efficient (both storage-wise and performance-wise) and easy to use.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mzabani.wordpress.com/2018/02/27/investment-strategies-lazy-evaluation-and-memoization/">Investment strategies, lazy evaluation and memoization&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This article will cover an interesting problem: given a set of possible investments, each with different tax rates, yearly rates and minimum time until withdrawal, what is the best investment strategy for the next 10, 20 or n years?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://dfordivam.github.io/posts/2018-02-27-introducing-tenjinreader-for-haskellers.html">Introducing tenjinreader.com for Haskellers&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The app is written end-to-end in Haskell. Moreover, I tried to use a bunch of new (experimental) stuff, so this blog post is about my experience.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://paulspontifications.blogspot.co.uk/2018/02/haskell-with-reactive-banana-and-gtk3.html">Haskell with Reactive Banana and GTK3&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’ve been doing some GUI coding recently using a combination of Reactive Banana and GTK3. I started out with just GTK3, but I could see it wasn’t going to scale because everything GTK3 does is in the IO monad.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://blog.ielliott.io/comonad-transformers-in-the-wild/">Comonad transformers in the wild&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I’m still getting an intuition for comonads, but they seem to embody some kind of “environment”, and comonad transformers are like a “composition of environments”.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.linkedin.com/jobs/cap/view/558610746/">Functional Programming at Mood Media in Bucharest&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Mood Media is still looking for a junior/mid-level PureScript developer to work on our digital signage solution. PureScript experience is not required — any FP experience will do. The job is in Bucharest, Romania — no remote.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://oscoin.io/jobs.html">Software Engineer at Oscoin in Berlin&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>At Monadic, the team behind oscoin, we’re hiring our first engineers. We’re looking for experienced candidates who are well versed in functional programming and distributed systems.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www.atzedijkstra.net/haskell/new-york-job-openings-with-the-strats-team-at-standard-chartered-bank/">Strat at Standard Chartered in New York&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Strats are generalist software engineers. You will work on the trading floor, directly with traders, building software to automate their work and improve their efficiency.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/7zti25/junior_haskell_developer_in_singapore/">Junior Developer at Holmusk in Singapore&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Holmusk is a digital healthcare company based in Singapore that is focused on helping people manage chronic disease. We are building a Haskell backend team in Singapore and looking for junior developers.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mmhaskell.com/blog/2018/2/26/attoparsec-the-clarity-of-do-syntax">Attoparsec: The clarity of do-syntax&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mail.haskell.org/pipermail/haskell-cafe/2018-February/128656.html">GHC 8.4.1-rc1 available&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://np.reddit.com/r/haskell/comments/7zj83v/ann_hackage_account_registration_changes/">Hackage account registration changes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/quchen/stackage-everything/tree/9a65fbc4503a04cf013ed8678a86744ebd3a1157">I want Stackage and I only have 3 minutes until takeoff&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://liquid.kosmikus.org">Liquid Haskell tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://namc.in/2018-02-22-currying">What is currying?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://www.stackage.org/lts-10.0/package/sdl2-2.3.0">sdl2&lt;/a>,
which provides both high and low level bindings to the SDL2 library.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/bos/aeson/issues/623">aeson: Export something similar to Yaml’s encodeFile/decodeFile&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bitemyapp/esqueleto/issues/73">esqueleto: &lt;code>update&lt;/code> seemingly isn’t compatible with &lt;code>SqlWriteT&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3850">stack: &lt;code>stack new&lt;/code> requires network to work&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/taksuyu/tabletop/issues/1">tabletop: Documenting information to help new developers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>Lambda Trondheim is hosting &lt;a href="https://www.meetup.com/Lambda-Trondheim/events/248157099/">a concrete introduction to Haskell&lt;/a> on March 1 in Trondheim, Norway.&lt;/li>
&lt;li>Silicon Valley Deep Specification is covering &lt;a href="https://www.meetup.com/Silicon-Valley-Deep-Specification/events/247443697/">chapter one of Software Foundations&lt;/a>, functional algorithms, on March 2 in Santa Clara, California, United States.&lt;/li>
&lt;li>The Belgian Scala User Group is explaining &lt;a href="https://www.meetup.com/BeScala/events/245944882/">implicit functions and reader transformers&lt;/a> on March 5 in Mechelen, Belgium.&lt;/li>
&lt;li>The Milwaukee Functional Programming User Group is hosting &lt;a href="https://www.meetup.com/Milwaukee-Functional-Programming-User-Group/events/248023597/">lightning talks&lt;/a> on March 6 in Milwaukee, Wisconsin, United States.&lt;/li>
&lt;li>Lambda Montreal is discussing &lt;a href="https://www.meetup.com/lambda-montreal/events/247964281/">higher-order multidimensional programming&lt;/a> on March 7 in Montreal, Canada.&lt;/li>
&lt;li>Haskell.SG is hosting &lt;a href="https://www.meetup.com/HASKELL-SG/events/246341985/">their March meetup&lt;/a> on March 8 in Singapore.&lt;/li>
&lt;/ul>
</content>
</entry>
<entry>
  <id>https://haskellweekly.news/issues/95.html</id>
  <title>Issue 95</title>
  <updated>2018-02-22T00:00:00Z</updated>
  <link href="https://haskellweekly.news/issues/95.html" />
  <content type="html">&lt;p>Welcome to another issue of Haskell Weekly!
&lt;a href="https://haskell-lang.org">Haskell&lt;/a> is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.&lt;/p>
&lt;p>Want to see something featured in Haskell Weekly?
Open an issue or pull request &lt;a href="https://github.com/haskellweekly/haskellweekly.github.io">on GitHub&lt;/a>.&lt;/p>
&lt;h2>Featured&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://summer.haskell.org/ideas.html">GSoC 2018 ideas&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This is a list of ideas for students who are considering to apply to Google Summer of Code 2018 for Haskell.org.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.haskell.org/haskell-symposium/2018/">Haskell Symposium 2018&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Haskell Symposium aims to present original research on Haskell, discuss practical experience and future development of the language, and to promote other forms of denotative programming.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.snoyman.com/blog/2018/02/haskell-ecosystem-requests">Haskell ecosystem requests&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>A single comment in a mega-thread on GitHub is hardly a good place to write down these requests, however, and it seems like there’s no progress on them. I’m going to instead put down these ideas here, with a bit more explanation, and a few more ideas that have popped up since then.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://neilmitchell.blogspot.com/2018/02/atomic-expressions-generically.html">Atomic expressions generically&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>For certain hints HLint needs to determine if a Haskell expression is atomic. I wrote a generic method to generate expressions and test if they are atomic.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://arunraghavan.net/2018/02/applicative-functors-for-fun-and-parsing/">Applicative functors for fun and parsing&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I am very excited by how elegantly Haskell allows us to express these ideas, using fundamental aspects of its type(class) system.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.lahteenmaki.net/applicative-parsing.html">Applicative parsing&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>I heard about Applicative Parsing, and learned that even the state of the art monadic parser combinator libraries in Haskell actually come with applicative interfaces. So, what’s going on?&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mmhaskell.com/blog/2018/2/19/applicative-parsing-ii-putting-the-pieces-together">Applicative parsing 2: Putting the pieces together&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>This week, we’ll put these pieces together in an actual parser for our Gherkin syntax.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blue-dinosaur.github.io/haskell/type-theory/programming/2018/02/19/result-types.html">Why are types so cool, Part 1: Result types&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Haskell is denser than Python code, and it is semantically richer. It can convey more precise and richer meanings about what the code does. And Haskell can type-check that code and guarantee that it makes sense. It won’t throw exceptions or errors.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://janmasrovira.gitlab.io/ascetic-slug/post/ascii-fractals/">ASCII fractals&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Getting hypnotized by the shape of a fractal is certainly fascinating. In this blog, we will write a Haskell program that creates fractals from a base pattern. The recursive nature of the fractals allow a simple implementation in Haskell.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>Jobs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://np.reddit.com/r/haskell/comments/7ysft5/tsuru_is_hiring/duits8s/">Developer at Tsuru in Tokyo&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Tsuru Capital is hiring, full time and intern positions are available. Haskell knowledge is required, experience with pricing futures/options would be nice but not necessary. Located in Tokyo, company language is English.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://twitter.com/snoyberg/status/965969385755172869">Remote devops at FP Complete&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>We’re continuing to expand our devops team at FP Complete. Remote work, awesome team, modern tooling, interesting projects.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2>In brief&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://oleg.fi/gists/posts/2018-02-21-single-free.html">Free &lt;code>Monad&lt;/code> and free &lt;code>Applicative&lt;/code> using single &lt;code>Free&lt;/code> type&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bartoszmilewski.com/2018/02/20/free-monoidal-profunctors/">Free monoidal profunctors&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.hsyl20.fr/home/posts/2018-02-21-heterogeneous-collections.html">Heterogeneous collections&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dbousamra/hnes/tree/02a1db57c4cc045af64892919c395f09d129f9fd">hnes: NES emulator written in Haskell&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/achirkin/vulkan/tree/cfb85bc7096abf6099b9253ac3da28d4ffd40ee4">Low-level, low-overhead Haskell bindings to Vulkan API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/releases/tag/v1.6.5">Stack 1.6.5 released&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/naushadh/hello-world/tree/3a4ecb3e49a7cd1624c385bdb808518182fd17cb#example-1-ultra-light-docker-image">Ultra light Haskell Docker image&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Package of the week&lt;/h2>
&lt;p>This week’s package of the week is &lt;a href="https://hackage.haskell.org/package/massiv-0.1.0.0">massiv&lt;/a>,
a library for multi-dimensional arrays with fusion, stencils and parallel computation.&lt;/p>
&lt;h2>Call for participation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/haskell-graphql/graphql-api/issues/172">graphql-api: How to throw an error from a handler?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/purescript/purescript/issues/3247">purescript: &lt;code>:browse&lt;/code> in REPL doesn’t show re-exported names&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commercialhaskell/stack/issues/3873">stack: Allow GitHub shorthand for &lt;code>extra-deps&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>Events&lt;/h2>
&lt;ul>
&lt;li>February 22: &lt;a href="https://www.meetup.com/Berlin-Functional-Programming-Group/events/246441427/">PureScript happy hour with Justin Woo&lt;/a> in Berlin, Germany&lt;/li>
&lt;li>February 23: &lt;a href="https://www.meetup.com/Austin-Types-Theorems-and-Programming-Languages/events/245115075/">Software Foundations by Benjamin Pierce&lt;/a> in Austin, Texas, United States&lt;/li>
&lt;li>February 24: &lt;a href="https://www.meetup.com/Papers-we-love-Bangalore/events/247608496/">A note on distributed computing with Indradhanush Gupta&lt;/a> in Bangalore, India&lt;/li>
&lt;li>February 26: &lt;a href="https://www.meetup.com/Vancouver-Functional-Programmers/events/247554893/">Haskell peer study group&lt;/a> in Vancouver, Canada&lt;/li>
&lt;li>February 27: &lt;a href="https://www.meetup.com/Functional-Programming-Auckland/events/247729046/">Auckland FP Meetup 3-topic event: Nix/NixOS; Haskell web dev; Lisp&lt;/a> in Auckland, New Zealand&lt;/li>
&lt;li>February 28: &lt;a href="https://www.meetup.com/London-Haskell/events/247767200/">Programs writing programs&lt;/a> in London, United Kingdom&lt;/li>
&lt;li>March 1: &lt;a href="https://www.meetup.com/NY-Women-Who-Functional-Code/events/243905448/">Women who are functional programmers presentation, network and discussions&lt;/a> in New York City, New York, United States&lt;/li>
&lt;/ul>
</content>
</entry>

</feed>
